- hosts: all
  collections:
    - fortinet.fortimanager
  connection: httpapi
  vars:
     ansible_httpapi_use_ssl: True
     ansible_httpapi_validate_certs: False
     ansible_httpapi_port: 443
     
     pre_script: MODEL_DEVICE_SCRIPT
     
   
  tasks:
    - name: Generate Access Token From FortiCloud Auth Server.
      uri:
        url: https://customerapiauth.fortinet.com/api/v1/oauth/token/
        method: POST
        body_format: json
        return_content: true
        headers:
          Content-Type: application/json
        body: '{"username": "{{ FORTICLOUD_APIID }}", "password": "{{ FORTICLOUD_PASSWD }}", "client_id": "FortiManager", "grant_type": "password"}'
      register: tokeninfo

#---------------------------------------------------------------------------------------

    - name: Add model device {{adom}}/{{fgt_name}}
      fmgr_generic:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        method: exec
        #bypass_validation: True
        params:
          - url: '/dvm/cmd/add/device'
            data:
              adom: '{{adom}}'
              flags: [ create_task , nonblocking ]
              device:
                  desc:
                  mgmt_mode: 'fmg'
                  model_device: 1
                  flags: [ is_model, linked_to_model ]
                  add_model: 1
                  name: '{{fgt_name}}'
                  sn: "{{fgt_sn}}"
                  os_type: 'fos'
                  os_ver: '6.0'
                  mr: 4
                  patch: 7
                  meta fields:
                    Address: "{{address}}"
                    HOSTNAME: "{{fgt_name}}"
                    LOOPBACK0: "{{loopback0}}"
                    Fairbank: "{{fairbank}}"
                    GSS_POS : "{{gss_pos}}"
                    GSS_INTERNET: "{{gss_internet}}"
                    Fairbank_NET: "{{fairbank_net}}"
                    GSS_POS_NET: "{{gss_pos_net}}"
                    GSS_INTERNET_NET: "{{gss_internet_net}}"
                    VPN_DSL_GH_IP: "{{vpn_dsl_gh}}"
                    VPN_DSL_FRA_IP: "{{vpn_dsl_fra}}"
                    VPN_LTE_GH_IP: "{{vpn_lte_gh}}"
                    VPN_LTE_FRA_IP: "{{vpn_lte_fra}}"
                    FGT_SN: "{{fgt_sn}}"
                    DSL_PSK: "{{dsl_psk}}"
                    DSL_USER: "{{dsl_user}}"
                    DSL_PASSWORD: "{{dsl_password}}"
                    LTE_PSK: "{{lte_psk}}"
                    LTE_USER: "{{lte_user}}"
                    LTE_PASSWORD: "{{lte_password}}"
            
                 
      register: fmgtask

    - name: Wait for add device task
      fmgr_fact:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        facts:
            selector: 'task_task'
            params:
                task: '{{fmgtask.meta.response_data.taskid}}'
      register: taskinfo
      until: taskinfo.meta.response_data.percent == 100
      retries: 30
      delay: 5
      failed_when: taskinfo.meta.response_data.state == 'error' and 'devsnexist' not in taskinfo.meta.response_data.line[0].detail

     
    - name: Set auto-link mode on model device
      fmgr_generic:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        method: update
        params:
          - url: '/dvmdb/adom/{{adom}}/device/{{fgt_name}}'
            data:
              flags: [ is_model, linked_to_model ]
              

#---------------------------------------------------------------------------------------
    - name: Run script {{pre_script}} on model dev {{fgt_name}}
      fmgr_generic:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        method: exec
        params:
          - url: '/dvmdb/adom/{{adom}}/script/execute'
            data:
              adom: '{{adom}}'
              scope:
                - name: '{{fgt_name}}'
                  vdom: global
              script: '{{pre_script}}'

      register: fmgtask

    - name: Wait for run script on model device task
      fmgr_fact:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        facts:
            selector: 'task_task'
            params:
                task: '{{fmgtask.meta.response_data.task}}'
      register: taskinfo
      until: taskinfo.meta.response_data.percent == 100
      retries: 30
      delay: 5
      failed_when: taskinfo.meta.response_data.state == 'error'

#---------------------------------------------------------------------------------------

    - name: Add Model FortiSwitch {{fsw_name}} to Model Fortigate {{fgt_name}}
      fmgr_generic:
        method: add
        params:
          - url: /pm/config/device/{{fgt_name}}/vdom/root/switch-controller/managed-switch
            data:
              name: "{{fsw_name}}"
              switch-id: "{{fsw_sn}}"
            push: 1

    - name: Assign FortiSwitch (Non POE) Template to Model FortiSwitch {{fsw_name}}
      fmgr_generic:
        method: update
        params:
          - url: /pm/config/adom/{{adom}}/obj/fsp/managed-switch/{{fsw_sn}}
            data:
              template: "S124E-sw-1"
            scope member:
              - name: "{{fgt_name}}"
                vdom: root

    - name: Add Model FortiSwitch {{fswpoe_name}} to Model Fortigate {{fgt_name}}
      fmgr_generic:
        method: add
        params:
          - url: /pm/config/device/{{fgt_name}}/vdom/root/switch-controller/managed-switch
            data:
              name: "{{fswpoe_name}}"
              switch-id: "{{fswpoe_sn}}"
            push: 1

    - name: Assign FortiSwitch (POE) Template to Model FortiSwitch {{fswpoe_name}}
      fmgr_generic:
        method: update
        params:
          - url: /pm/config/adom/{{adom}}/obj/fsp/managed-switch/{{fswpoe_sn}}
            data:
              template: "S124E-sw-2"
            scope member:
              - name: "{{fgt_name}}"
                vdom: root

#---------------------------------------------------------------------------------------

    - name: Add Indoor Model FortiAP {{api_name}} to Model FortiGate {{fgt_name}}
      fmgr_generic:
        method: add
        params:
          - url: /pm/config/device/{{fgt_name}}/vdom/root/wireless-controller/wtp
            data:
              name: "{{api_name}}"
              wtp-id: "{{api_sn}}"
              wtp-profile: "221E"
            push: 1

    - name: Assign FortiAP Profile 221E to Model FortiAP {{api_name}}
      fmgr_generic:
        method: update
        params:
          - url: /pm/config/adom/{{adom}}/obj/wireless-controller/wtp/{{api_sn}}
            data:
              name: "{{api_name}}"
              wtp-profile: "221E"
            scope member:
              - name: "{{fgt_name}}"
                vdom: root

    - name: Add Outdoor Model FortiAP {{ape_name}} to Model FortiGate {{fgt_name}}
      fmgr_generic:
        method: add
        params:
          - url: /pm/config/device/{{fgt_name}}/vdom/root/wireless-controller/wtp
            data:
              name: "{{ape_name}}"
              wtp-id: "{{ape_sn}}"
              wtp-profile: "222E"
            push: 1

    - name: Assign FortiAP Profile 222E to Model FortiAP {{ape_name}}
      fmgr_generic:
        method: update
        params:
          - url: /pm/config/adom/{{adom}}/obj/wireless-controller/wtp/{{ape_sn}}
            data:
              name: "{{ape_name}}"
              wtp-profile: "222E"
            scope member:
              - name: "{{fgt_name}}"
                vdom: root
                
#---------------------------------------------------------------------------------------

    - name: Install Configuration to Device DB against Model FortiGate {{fgt_name}}
      fmgr_generic:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        method: exec
        params:
          - url: '/securityconsole/install/device'
            data:
              adom: '{{adom}}'
              scope:
                - name: '{{fgt_name}}'
                  vdom: root
              flags: 'none'
      register: fmgtask

    - name: Wait for install polpkg to model dev task
      fmgr_fact:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        facts:
            selector: 'task_task'
            params:
                task: '{{fmgtask.meta.response_data.task}}'
      register: taskinfo
      until: taskinfo.meta.response_data.percent == 100
      retries: 30
      delay: 5
      failed_when: taskinfo.meta.response_data.state == 'error'

#---------------------------------------------------------------------------------------


    - name: Assign Model dev {{fgt_name}} to BP device Group
      fmgr_generic:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        method: set
        params:
          - url: '/dvmdb/adom/{{adom}}/group/BP/object member'
            data:
              name: '{{fgt_name}}'
              vdom: root
              
#---------------------------------------------------------------------------------------

     - name: Install polpkg {{pkg}} to model dev {{fgt_name}}
      fmgr_generic:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        method: exec
        params:
          - url: '/securityconsole/install/package'
            data:
              adom: '{{adom}}'
              adom_rev_comments: 'v1: prepped {{adom}}/{{pkg}} copy to model {{fgt_name}}'
              dev_rev_comments:  'v1: prepped {{adom}}/{{pkg}} copy only'
              flags: [ copy_only ]
              pkg: '{{pkg}}'
              scope:
                - name: '{{fgt_name}}'
                  vdom: root
      register: fmgtask

    - name: Wait for install polpkg to model dev task
      fmgr_fact:
        forticloud_access_token: '{{ tokeninfo.json.access_token }}'
        facts:
            selector: 'task_task'
            params:
                task: '{{fmgtask.meta.response_data.task}}'
      register: taskinfo
      until: taskinfo.meta.response_data.percent == 100
      retries: 30
      delay: 5
      failed_when: taskinfo.meta.response_data.state == 'error'
